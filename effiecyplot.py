# -*- coding: utf-8 -*-
"""EffiecyPlot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQTbiMM95vGLVMs6X2W8lbOAPkjpYWiO
"""

import numpy as np
import matplotlib.pyplot as plt

# Adjusting the synthetic data for the new maximum dataset size of 20000 entries
new_dataset_sizes = np.array([1500, 5000, 10000, 15000, 20000])
new_time_taken = np.array([0.41,2.81, 16.11, 23.41, 63.51 ])  # Exponential growth for time
new_memory_used = np.exp([0.1, 1.03, 24.66, 33.2, 138.98])  # Exponential growth for memory

# Creating the updated plot
plt.figure(figsize=(10, 6))

# Plotting time efficiency
plt.plot(new_dataset_sizes, new_time_taken, label='Time Efficiency', color='blue', marker='o')

# Plotting memory efficiency
plt.plot(new_dataset_sizes, new_memory_used, label='Memory Efficiency', color='red', marker='x')

# Adding details
plt.title('Efficiency of MFS Algorithm vs Dataset Size (Up to 20000 Entries)')
plt.xlabel('Dataset Size')
plt.ylabel('Efficiency (Arbitrary Units)')
plt.yscale('log')  # Log scale due to exponential growth
plt.legend()
plt.grid(True)

# Show plot
plt.show()